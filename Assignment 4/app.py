# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16qXITJHAk-n_FYCNO46dLmp_u-oah7an
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install --upgrade Flask

# Commented out IPython magic to ensure Python compatibility.
# %pip install --upgrade Werkzeug

import pickle
with open(r"C:\Users\Samriddha\OneDrive\Desktop\msc@cmi\cmi sem 4\Applied ML\best_model.pkl", 'rb') as file:
            best_model = pickle.load(file)

# import sys
# sys.path.append('/path/to/your/project_folder')

# from score.score import score

import sys
sys.path.append(r"C:\Users\Samriddha\OneDrive\Desktop\msc@cmi\cmi sem 4\Applied ML\AppliedML\Assignment 3")

from score import score

import pandas as pd
import numpy as np
test=pd.read_csv(r"C:\Users\Samriddha\OneDrive\Desktop\msc@cmi\cmi sem 4\Applied ML\test.csv")

import random
r = random.randint(0, 573)#number of rows in train.csv is 573
text= test.iat[r,0]

from flask import Flask, request, jsonify


app = Flask(__name__)

@app.route('/score', methods=['POST'])
def score_endpoint():
    data = request.get_json()
    text = data.get('text', '')
    threshold = float(data.get('threshold', 0.5))  # Default threshold is 0.5
    prediction, propensity = score(text, best_model, threshold)
    response = {'prediction': prediction, 'propensity': propensity}
    # Convert bool_ to bool using item()
    prediction = bool(prediction.item()) if isinstance(prediction, np.bool_) else bool(prediction)
    response = {'prediction': prediction, 'propensity': propensity}
    return jsonify(response)


if __name__ == '__main__':
    app.run(debug=True)

# Commented out IPython magic to ensure Python compatibility.
# %tb